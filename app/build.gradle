apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            keyAlias 'androidreleasekey'
            keyPassword 'leobel890819'
            storeFile file('/Users/leobel/.android/release.keystore')
            storePassword 'leobel890819'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "org.freelectron.leobel.winline98"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 7
        versionName "1.2.1"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField("String", "EMAIL_CONTACT", "\"androidstudio@gmail.com\"")
        }
        release {
            testCoverageEnabled false
            buildConfigField("String", "EMAIL_CONTACT", "\"" + System.getenv("EMAIL_CONTACT") + "\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

retrolambda {
    jvmArgs '-noverify'
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // Support library
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:gridlayout-v7:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'

    //Google Play Services
    compile 'com.google.android.gms:play-services-games:10.0.1'

    //Firebase and Mobile Ads SDK
    compile 'com.google.firebase:firebase-ads:10.0.1'

    // Dagger DI
    compile 'com.google.dagger:dagger:2.4'
    apt 'com.google.dagger:dagger-compiler:2.4'

    // Leak Canary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    // Multidex
    compile 'com.android.support:multidex:1.0.1'

    // Timber
    compile 'com.jakewharton.timber:timber:4.1.2'

    // winline logic library
    //compile 'com.github.leobel:winline:1.1.2'

    // Facebook SDK
    compile 'com.facebook.android:facebook-android-sdk:4.15.0'

    // show case view
    compile 'com.github.amlcurran.showcaseview:library:5.4.3'

    // Test dependencies
    androidTestCompile ('junit:junit:4.12') {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    androidTestCompile ('org.mockito:mockito-core:1.10.19')
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'

    androidTestCompile 'org.hamcrest:hamcrest-core:1.3'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1') {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestCompile ('com.android.support.test:runner:0.5'){
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    androidTestCompile ('com.android.support.test:rules:0.5'){
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }

    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'

    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile 'com.android.support:support-annotations:25.1.0'
}

apply plugin: 'com.google.gms.google-services'


// Jacoco config
apply plugin: 'jacoco'

jacoco {
    // Use this version for upper ones are broken (with Gradle)
    // https://github.com/jacoco/jacoco/issues/288
    toolVersion = "0.7.1.201405082137"
}

// Edit covered scope if needed
// For my part I like having the coverage of both application and tests
def coverageSourceDirs = [
        '../app/src'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testUnitTestDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}
//end Jacoco config


